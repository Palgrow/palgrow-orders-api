steps:
  # Build docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/orders-api:$COMMIT_SHA",
        ".",
        "--build-arg",
        "PORT=${_PORT}",
        "--build-arg",
        "APP_SECRET=${_APP_SECRET}",
        "--build-arg",
        "RAVEN_CONFIG_URL=${_RAVEN_CONFIG_URL}",
        "--build-arg",
        "MONGO_URL=${_MONGO_URL}",
        "--build-arg",
        "REDIS_HOST=${_REDIS_HOST}",
        "--build-arg",
        "REDIS_PORT=${_REDIS_PORT}",
        "--build-arg",
        "API_BASE_URL=${_API_BASE_URL}",
        "--build-arg",
        "GC_CREDENTIALS=${_GC_CREDENTIALS}",
        "--build-arg",
        "GC_BUCKET_NAME=${_GC_BUCKET_NAME}",
      ]

  # Apply Kubernetes service and deployment config
  - name: "gcr.io/cloud-builders/kubectl"
    args: ["apply", "-f", "k8s/"]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=us-east1-b"
      - "CLOUDSDK_CONTAINER_CLUSTER=staging"

  # Set new deployment image
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      [
        "set",
        "image",
        "deployment",
        "orders-api",
        "orders-api=gcr.io/$PROJECT_ID/orders-api:$COMMIT_SHA",
      ]
    env:
      - "CLOUDSDK_COMPUTE_ZONE=us-east1-b"
      - "CLOUDSDK_CONTAINER_CLUSTER=staging"

options:
  substitution_option: "ALLOW_LOOSE"
images: ["gcr.io/$PROJECT_ID/orders-api:$COMMIT_SHA"]
